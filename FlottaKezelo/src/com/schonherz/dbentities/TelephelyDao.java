package com.schonherz.dbentities;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.Property;

import com.schonherz.dbentities.Telephely;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table Telephelyek.
*/
public class TelephelyDao extends AbstractDao<Telephely, Long> {

    public static final String TABLENAME = "Telephelyek";

    /**
     * Properties of entity Telephely.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property TelephelyID = new Property(0, Long.class, "telephelyID", true, "TELEPHELY_ID");
        public final static Property TelephelyNev = new Property(1, String.class, "telephelyNev", false, "TELEPHELY_NEV");
        public final static Property TelephelyCim = new Property(2, String.class, "telephelyCim", false, "TELEPHELY_CIM");
        public final static Property TelephelyTelefonszam = new Property(3, String.class, "telephelyTelefonszam", false, "TELEPHELY_TELEFONSZAM");
        public final static Property TelephelyXkoordinata = new Property(4, Float.class, "telephelyXkoordinata", false, "TELEPHELY_XKOORDINATA");
        public final static Property TelephelyYkoordinata = new Property(5, Float.class, "telephelyYkoordinata", false, "TELEPHELY_YKOORDINATA");
        public final static Property TelephelyEmail = new Property(6, String.class, "telephelyEmail", false, "TELEPHELY_EMAIL");
    };

    private DaoSession daoSession;


    public TelephelyDao(DaoConfig config) {
        super(config);
    }
    
    public TelephelyDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'Telephelyek' (" + //
                "'TELEPHELY_ID' INTEGER PRIMARY KEY ," + // 0: telephelyID
                "'TELEPHELY_NEV' TEXT," + // 1: telephelyNev
                "'TELEPHELY_CIM' TEXT," + // 2: telephelyCim
                "'TELEPHELY_TELEFONSZAM' TEXT," + // 3: telephelyTelefonszam
                "'TELEPHELY_XKOORDINATA' REAL," + // 4: telephelyXkoordinata
                "'TELEPHELY_YKOORDINATA' REAL," + // 5: telephelyYkoordinata
                "'TELEPHELY_EMAIL' TEXT);"); // 6: telephelyEmail
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'Telephelyek'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Telephely entity) {
        stmt.clearBindings();
 
        Long telephelyID = entity.getTelephelyID();
        if (telephelyID != null) {
            stmt.bindLong(1, telephelyID);
        }
 
        String telephelyNev = entity.getTelephelyNev();
        if (telephelyNev != null) {
            stmt.bindString(2, telephelyNev);
        }
 
        String telephelyCim = entity.getTelephelyCim();
        if (telephelyCim != null) {
            stmt.bindString(3, telephelyCim);
        }
 
        String telephelyTelefonszam = entity.getTelephelyTelefonszam();
        if (telephelyTelefonszam != null) {
            stmt.bindString(4, telephelyTelefonszam);
        }
 
        Float telephelyXkoordinata = entity.getTelephelyXkoordinata();
        if (telephelyXkoordinata != null) {
            stmt.bindDouble(5, telephelyXkoordinata);
        }
 
        Float telephelyYkoordinata = entity.getTelephelyYkoordinata();
        if (telephelyYkoordinata != null) {
            stmt.bindDouble(6, telephelyYkoordinata);
        }
 
        String telephelyEmail = entity.getTelephelyEmail();
        if (telephelyEmail != null) {
            stmt.bindString(7, telephelyEmail);
        }
    }

    @Override
    protected void attachEntity(Telephely entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Telephely readEntity(Cursor cursor, int offset) {
        Telephely entity = new Telephely( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // telephelyID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // telephelyNev
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // telephelyCim
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // telephelyTelefonszam
            cursor.isNull(offset + 4) ? null : cursor.getFloat(offset + 4), // telephelyXkoordinata
            cursor.isNull(offset + 5) ? null : cursor.getFloat(offset + 5), // telephelyYkoordinata
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6) // telephelyEmail
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Telephely entity, int offset) {
        entity.setTelephelyID(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setTelephelyNev(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setTelephelyCim(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTelephelyTelefonszam(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTelephelyXkoordinata(cursor.isNull(offset + 4) ? null : cursor.getFloat(offset + 4));
        entity.setTelephelyYkoordinata(cursor.isNull(offset + 5) ? null : cursor.getFloat(offset + 5));
        entity.setTelephelyEmail(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Telephely entity, long rowId) {
        entity.setTelephelyID(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(Telephely entity) {
        if(entity != null) {
            return entity.getTelephelyID();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
